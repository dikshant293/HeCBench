#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = clang++
OPTIMIZE  = yes
DEBUG     = no
DEVICE    = gpu
SM        = cc70
MR        = 90


#===============================================================================
# Program name & source code list
#===============================================================================

program = main_$(SM)_clang

source = main.cpp shrUtils.cpp    

obj = $(source:.cpp=.o)

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := $(EXTRA_CFLAGS) -std=c++14 -Wall

# Linker Flags
LDFLAGS = 

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g
  LDFLAGS  += -g
endif


# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

# ASYNC
ifeq ($(USE_ASYNC), yes)
     CFLAGS += -DASYNC -DTASKWAIT
     program :=$(program)_async
endif

ifeq ($(DEVICE),gpu)
  CFLAGS +=-fopenmp -fopenmp-targets=nvptx64-nvidia-cuda  -march=native #-Xcuda-ptxas --maxrregcount=$(MR) -fopenmp-assume-no-thread-state
else
  CFLAGS +=-qopenmp
endif
#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(obj)
	$(CC) $(CFLAGS) $(obj) -o $@ $(LDFLAGS)

%.o: %.cpp shrUtils.h
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(program) $(obj)

run: $(program)
	./$(program) 67108864 100
